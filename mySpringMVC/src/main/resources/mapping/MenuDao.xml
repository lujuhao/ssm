<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.MenuDao">
  <resultMap id="BaseResultMap" type="com.entity.Menu">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="sort" jdbcType="TINYINT" property="sort" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
  </resultMap>
  
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.entity.Menu">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, name, url, parent_id, sort, icon ,permission
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_menu
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_menu
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.entity.Menu">
    insert into sys_menu (id, name, url, 
      parent_id, sort, icon, 
      remark)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=VARCHAR}, #{sort,jdbcType=TINYINT}, #{icon,jdbcType=VARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.entity.Menu">
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=TINYINT},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Menu">
    update sys_menu
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=TINYINT},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.entity.Menu">
    update sys_menu
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=TINYINT},
      icon = #{icon,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.entity.Menu">
    update sys_menu
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=TINYINT},
      icon = #{icon,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <!-- 根据用户id获取用户菜单 -->
  <select id="getUserMenuList" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
  	SELECT 
  		<include refid="Base_Column_List" />
    FROM
	`sys_menu` m
	LEFT JOIN 
		`sys_role_menu` rm ON rm.menu_id = m.id
	LEFT JOIN 
		`sys_user_role` ur ON ur.role_id = rm.role_id 
	WHERE
		ur.user_id = #{userId}
  </select>
  
  <!-- 根据用户id获取用户一级菜单 -->
  <select id="getUserParentMenuList" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
  	SELECT 
  		DISTINCT m.*
    FROM
	`sys_menu` m
	LEFT JOIN 
		`sys_role_menu` rm ON rm.menu_id = m.id
	LEFT JOIN 
		`sys_user_role` ur ON ur.role_id = rm.role_id 
	WHERE
		ur.user_id = #{userId}
	AND 
		m.`parent_id` = '0'	
	ORDER BY 
		m.`sort` ASC		
  </select>
  
  <!-- 根据父级菜单id获取子菜单 -->
  <select id="getChildMenuByParentId" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
  	SELECT 
  		<include refid="Base_Column_List" />
    FROM
	`sys_menu` m
	WHERE
		m.`parent_id` = #{parentId}
	ORDER BY 
		m.`sort` ASC	
  </select>
  
  <!-- 获取全部一级菜单 -->
  <select id="getParentMenuList" resultMap="ResultMapWithBLOBs">
  	SELECT 
  		<include refid="Base_Column_List" />
    FROM
		`sys_menu` m
	WHERE
		m.`parent_id` = '0'
	ORDER BY 
		m.`sort` ASC	
  </select>
  
  
</mapper>