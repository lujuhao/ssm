<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<description>SpringMVC配置文件</description>

 	<!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties" />
    </bean>

	<!-- 自动扫描Controller包与自定义异常处理包-->
    <context:component-scan base-package="com.controller,com.exception" />

    <!-- 添加注解驱动 -->
    <mvc:annotation-driven enable-matrix-variables="true" />
    
    <!-- 开启AOP功能 -->
    <aop:config proxy-target-class="true"/>
    
    <!-- 启用默认servlet,允许对静态资源文件的放行,需要在web.xml中配置名为default的servlet-mappping,spring3.0 之后推荐使用此方式  -->
    <mvc:default-servlet-handler />
	
	<!-- 静态资源映射,此方法也能设置对静态资源的放行,但仅限于指定的访问路径,mapping:访问路径,location:静态资源位置 -->
    <mvc:resources mapping="/static/**" location="/static/" />
	
	<!-- 定义默认的访问视图,直接将访问url和视图进行映射，而无需要通过控制器 -->
	<mvc:view-controller path="/" view-name="${web.view.default}"/>
	
	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- 登录拦截器,集成Shiro后，可不必配置此登录拦截器 -->
        <!-- <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/auth"/>
            <mvc:exclude-mapping path="/createImgCode"/>
            <bean class="com.interceptor.LoginInterceptor"/>
        </mvc:interceptor> -->
        
        <!-- 日志拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/auth"/>
            <mvc:exclude-mapping path="/createImgCode"/>
            <bean class="com.interceptor.LogInterceptor"/>
        </mvc:interceptor>
	</mvc:interceptors>

	<!--避免IE执行AJAX时，返回JSON出现下载文件，Spring4.1.1去掉了MappingJacksonHttpMessageConverter
	spring-mvc配置将MappingJacksonHttpMessageConverter改成MappingJackson2HttpMessageConverter，
	Maven对org.codehaus.jackson的引用，改用 com.fasterxml.jackson.core -->
    <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />    <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="${web.view.prefix}" />
        <property name="suffix" value="${web.view.suffix}" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="${web.maxUploadSize}" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" ></property>
    </bean>
    
    <!-- 配置自定义异常错误页面 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<map>
				<entry key="ResourceNotFoundException" value="/error/404" />
				<entry key="DataAccessException" value="/error/error" />
				<entry key="UnauthorizedException" value="/error/unauthorized" />
			</map>
		</property>
		
		<property name="statusCodes">
			<map>
				<entry key="/error/404" value="404" />
				<entry key="/error/error" value="500" />
			</map>
		</property>
	</bean>
</beans>